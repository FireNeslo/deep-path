{"version":3,"file":"nslo-deep-path.js","names":[],"mappings":"","sources":["nslo-deep-path.js"],"sourcesContent":["!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.nsloDeepPath=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar SPLIT_EXP = /\\]\\[|\\]\\.|\\[|\\.|\\]/;\nfunction safe(obj) {'use strict';\n  if (obj.constructor === obj) {\n    throw new Error(\"Access to function constructor not allowed\");\n  } else if ((obj.window === obj || obj.global === obj) && obj.setTimeout && obj.setInterval) {\n    throw new Error(\"Access to global not allowed\");\n  } else if (obj.children && (obj.nodeName || (obj.prop && obj.attr && obj.find))) {\n    throw new Error(\"Access to HTMLElement not allowed\");\n  } else if (obj === Object) {\n    throw new Error(\"Access to Object constructor not allowed\");\n  }\n  return obj;\n}\nfunction isPart(part) {'use strict'; return part; }\n/**\n * Creates a deep path Object for getting and setting deep values\n * @module nslo-deep-path\n * @param {string} path\n */\nfunction DeepPath(path) {'use strict';\n  if(!this) return new DeepPath(path);\n  var parts = path.split(SPLIT_EXP).filter(isPart);\n  var length= parts.length;\n  /**\n   * gets a deep value from scope\n   * @param {object} scope - scope for operation\n   */\n  this.get = function(scope) {\n    var part;\n    for(var i = 0; i < length; ++i) { \n      part = parts[i];\n      if(!scope[part]) return;\n      scope = safe(scope[part]);\n    }\n    return scope; \n  };\n  /**\n   * sets a deep value in scope\n   * @param {object} scope - scope for operation\n   * @param {*} value - value to set\n   */\n  this.set = function(scope, value) {\n    var part, last = parts.length-1;\n    for(var i = 0; i < last; ++i) { \n      part = parts[i];\n      scope = scope[part] || (scope[part] = isNaN(parts[i+1]) ? {} : []);\n    }\n    return (scope[parts[last]] = value);\n  };\n}\nmodule.exports = DeepPath;\n},{}]},{},[1])(1)\n});"],"sourceRoot":"/source/"}